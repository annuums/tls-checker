name: Build and Delivery to Docker Hub

on:
  release:
    types:
      - published

env:
  REGISTRY: registry-1.docker.io/annuums
  DOCKER_BUILDKIT: 1
  IMAGE_NAME: tls-checker

## You can add alert logics if you need to notify the team about the release
jobs:
  extract_release_tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_info.outputs.version }}
    steps:
      - name: Extract Release Information
        id: extract_info
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}      
          IFS='-' read -r VERSION <<< "$TAG_NAME"
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Build will be triggered || version: $VERSION"

  test_docker_hub:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: annuums
          password: ${{ secrets.DOCKER_PASSWORD }}

  test_go:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Go setup
        uses: actions/setup-go@v5
        with:
          go-version: '>=1.23.0'

      - name: Run Test
        run: |
          make test

  build_and_delivery:
    needs:
      - test_go
      - test_docker_hub
      - extract_release_tag
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker builds
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.arch }}-${{ hashFiles('**/Dockerfile') }}-v1
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        id: login_docker_hub
        uses: docker/login-action@v3
        with:
          username: annuums
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            GO_ENV=production
            VERSION=${{ needs.extract_release_tag.outputs.version }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.extract_release_tag.outputs.version }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
